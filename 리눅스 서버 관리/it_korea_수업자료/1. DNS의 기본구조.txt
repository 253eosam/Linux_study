[도메인(Domain)]
	> 인터넷이라는 네트워크상에서 컴퓨터를 구별하는 방법 
	> 사람들이 알아보기 쉬운 숫자와 문자 조합으로 구성하여 의미를 부여하는 방식 
	> 네트워크상에서 각 컴퓨터에게 IP를 부여하고 IP주소를 가지고 접속 
	> IP번호를 외워서 접속하기 힘들어 도메인명을 부여하여 접속하게 한다. 
	> 도메인 이름을 부여하고 관리하는 체계적인 시스템을 DNS라고 한다. 

[도메인 이름 관리 기구]
	1. IANA(Internet Assigned Number Authority) - 인터넷 할당 번호 관리 기관 
		> 전세계의 DNS를 관리하고 조정하는 기구로써 인터넷의 안정적이고 효율적인 운영에 대한 
		  책임을 지고, 모든 정책적 권한을 행사하는 기관 
		> ISP(Internet Service Provider)들은 IANA를 통해서 도메인네임 등록과 IP주소 할당에 
		  대한 일들을 조정 

	2. ICANN(Internet Corporation for Assigned Names and Numbers)
		> 인터넷 도메인네임과 주소를 지정하는 미국의 비영리 사설기관 
		> 인터넷 도메인네임 관리시스템의 기술적 관리, IP주소 공간 할당, 프로토콜 파라미터 지정, 
		  경로서버시스템관리등의 업무를 조정하는 세계적 합의체로서 미국 정부가 승인한 기관

	3. KRNIC(한국 인터넷 진흥원)
		> 국내의 인터넷 업무를 담당 
		> 1999년 6월21일 정보통신부로부터 비영리 재단법인으로 설립이 승인 
		> 국내의 도메인, .kr 도메인에 대한 모든 업무를 관장 
			> 도메인네임, IP 주소등 인터넷 주소에 관한 정책 개발 
			> 도메인네임 등록업무 및 IP주소, AS번호 등의 할당 업무 

[DNS 구조]
	> IP주소 또는 도메인네임은 인터넷 상에서 중복되지 않는 유일한 것 
	> 기능
		1) 도메인네임 공간 및 리소스 레코드 
		2) 네임서버 
		3) 리졸버 

	[도메인 네임공간]
		> 도메인네임의 계층적 구조 공간 
		> www.kernel.org는 도메인네임 공간에 속한 하나의 노드 즉, 호스트 네임을 지칭 
		> 도메인네임 공간의 분배와 도메인네임의 할당은 전 세계적으로 도메인네임 할당 기관을 통해 
		  체계적으로 할당, 관리 되고 있다. 
		> 인터넷 상에서 특정 도메인네임은 언제나 유일한 네임으로써 유지된다. 

	[리소스 레코드]
		> 도메인네임 공간 중에서 지정된 도메인네임에 대해 필요한 인터넷 자원 정보를 매핑하는 수단을 제공
		> www.kernel.org의 IP 주소가 100.100.100.100일 경우, 이를 인터넷 상에서 알려주기 위해 
		  www.kernel.org라는 네임에 대해 IP주소 속성을 연결시켜 DNS 데이터베이스를 구성 해야 한다. 
		  (zone 파일) 
		  www.kernel.org 1800 IN A 100.100.100.100 형태로 사용을 설정 
		> 도메인네임이 가지는 속성정보를 지정하는 수단으로 정의된 것이 리소스 레코드 
	
	[네임서버]
		> 도메인 존의 정보를 소유하고 이에 대한 질의에 대해 응답하는 역할을 수행 
		> DNS 서버라고 부른다. 

	[리졸버]
		> 네임서버에 의해 구성된 도메인 데이터베이스를 검색하는 역할 
		> 요청된 리소스 레코드가 존재하는 위치를 도메인네임 시스템에서 찾고 이 리소스레코드의 정보를 
		  최종 응답으로 되돌려 주는 기능을 담당 
		> 동일한 DNS 질의를 짧은 시간내에 빈번하게 반복하는 것을 방지하기 위해서 캐시를 내부에 구현하여 
		  DNS 질의 결과 데이터를 일정 기간동안 캐시에 저장하여 관리 

	- DNS의 구성요소 간에는 상호 도메인 데이터베이스의 검색과 응답을 위한 프로토콜이 필요 
	- DNS 프로토콜은 네트워크를 경유하여 DNS 구현요소 간에 DNS 질의(DNS Query)와 응답(DNS Response)을 
	  수행하기 위한 클라이언트/서버 모델의 애플리케이션 프로토콜이다. 

	- DNS 프로토콜은 TCP 및 UDP 포트번호 53번을 사용 
	- 네임서버는 TCP와 UDP 53번 포트를 기본 포트로 사용 
	- 대부분 UDP 53번 포트를 사용 
	- DNS 메시지 영역의 길이가 512byte 초과하는 경우에는 TCP 53번포트를 사용 
	- 방화벽에서 53번포트를 열어 주어야 사용가능하기 때문에 TCP 53번포트와 UDP 53번호포트 둘다 열어 준다. 
	
[네임서버 유형]
	- 네임서버는 Primary 네임서버, Secondary 네임서버, Cache only Server로 구분 

	[Primary Server]
		> 독자적으로 관리하는 zone 정보파일을 유지하면서 질의에 응답하고 정보를 갱신하는 서버 

	[Secondary Server]
		> Primary Server에 부하가 많이 걸릴 경우 분산하기 위해 사용하는 서버 
		> 혹은 자료를 백업하여 장애가 발생하면 Primary 서버의 역할을 위임 받아 동작하는 서버 
		> 2차 DNS 서버라고 부름

	[Cache only Server]
		> 스스로 관리하는 zone은 없고 단지 반복되는 질의만을 전문적으로 수행하는 서버 


	[네임서버가 없는 상태]
	/etc/hosts 파일 
		> 네임서버 질의시 가장 먼저 자신의 리눅스시스템에 정의되어 있는 /etc/hosts파일을 참조한 다음 
		  이곳에 정의되어 있지 않으면 외부에서 찾도록 구성되어 있다. 
		> localhost로 접속할 때 자신에게 접속이 가능한 것은 자신의 IP를 127.0.0.1 로 지정하고 
 		  로컬에서 인식하는 이름으로 localhost 라는 이름이 /etc/hosts파일에 기본적으로 지정되어 있기 때문
			> 127.0.0.1은 자기 자신을 의미하는 IP주소
		> ssh이나 telnet 접속 시 도메인을 localhost 라고 입력하면 자신에게 접속

	/etc/resolv.conf 
		> /etc/hosts에 지정되지 않은 도메인은 /etc/resolv.conf 파일에 지정된 네임서버에게 질의 
		> 기본 2개의 네임서버를 가진다. 
		> 첫 번째 네임서버에 질의를 먼저하고 응답이 없을 시 두번째 네임서버에 질의하여 도메인에 대한 IP를 얻음 

[네임서버 설치]
	- 도메인을 IP주소로 변환시켜주는 이름 관리 서비스 
	- 네임서버를 운영하기 위해서 BIND 패키지의 설치가 필요 

	#> yum -y install bind-utlis 
	#> nslookup 
		> 리눅스에서 도메인이나 ip주소를 찾는 프로그램 

	[네임서버 정보 검색 유틸리티]
		- host		: 네임서버에 질의하여 호스트의 IP를 얻을 수 있는 가장 기본적이며 간단한 유틸리티 
			#> host [찾을 호스트이름]
		
		- dig		: 네임서버 검색 유틸리티 
			#> dig [찾을 호스트이름]

		- nslookup 	: 네임서버 질의시 가장 많이 사용하는 유틸리티 
			#> nslookup [찾을 호스트이름] [질의할 네임서버]
				> 질의할 네임서버를 지정하지 않으면 /etc/resolv.conf에 
				  지정된 네임서버에게 질의 

	1) BIND(Berkeley Internet Name Domain) 설치 
		#> yum -y install bind* (bind 패키지 설치)

	[패키지 설치 후 생성되는 주요 파일 및 디렉토리]
	/var/named/chroot/etc/named.conf 	  : 네임 서버의 주 설정 파일 
	/var/named/chroot/etc/named.rfc1912.zones : 존 정보를 설정하기 위한 파일 
	/var/named/chroot/etc/named 		  : 네임서버의 데이터베이스 파일을 보관하는 디렉토리 
	/usr/sbin/named 			  : 네임서버 데몬 파일 

	[설치되는 주요 패키지]
	bind 		: DNS서버 구축 프로그램 제공 
	bind-utils	: DNS서버 질의를 위해 사용되는 유틸리티 모음 
	bind-libs 	: BIND와 BIND유틸리티 프로그램이 사용하는 라이브러리 패키지 
	bind-chroot	: BIND의 chroot(change root)환경을 위해 사용되는 파일 제공 

	> named 데몬이 사용하는 홈디렉토리는 일반적으로 /var/named/chroot/를 사용 

	#> service named start 
	#> service named status 
	#> chkconfig --list named 
	#> chkconfig named on

	2) 네임서버 운영을 위한 설정파일 
	</etc/named.conf>
	listen-on port 53 { 127.0.0.1; };
		> 네임서버의 포트번호와 접근할 수 있는 IP를 설정 
		> 기본적으로 127.0.0.1 즉, 자시만이 53번 포트에 접속을 허용하고 있음 
		> 외부에서 네임서버로의 접근을 허용해야 한다면 IP부분에 any를 입력 

	listen-on-v6 port 53 { ::1; };
		> ipv6의 네임서버 운영을 설정
		> 현재는 사용x

	directory       "/var/named";
		> DNS의 zone파일의 위치를 지정 
		> zone파일의 기본 설정파일들은 /var/named 디렉토리에 모두 위치 

	dump-file       "/var/named/data/cache_dump.db";
		> 캐시 덤프 파일이 생성되는 파일의 절대경로 위치를 지정 

	statistics-file "/var/named/data/named_stats.txt";
		> 통계파일이 생성되는 절대경로와 파일이름을 지정 

	memstatistics-file "/var/named/data/named_mem_stats.txt";
		> 메모리 관련 통계파일이 생성되는 절대경로와 파일이름을 지정 

	allow-query     { localhost; };
		> 네임서버 쿼리를 허용할 IP 또는 IP대역을 설정 
		> 외부와의 쿼리를 허용하려면 any 입력 

	recursion yes;
		> 외부에서 현재의 네임서버를 지정하여 사용할 것인지의 여부 
		> 기본은 yes
		
	logging {
        channel default_debug {
                file "data/named.run";
                severity dynamic;
        };
};

		> 디버깅시 참고 할 수 있는 로그파일생성 위치를 지정 
		> 네임서버 에러 발생 시 이 파일을 참고하여 디버깅 

	include "/etc/named.rfc1912.zones";
		> 네임서버 데몬 실행 시 외부의 설정파일을 포함하고자 한다면 include를 이용하여 포함할 파일의 위치와 
		  파일 이름의 절대경로를 입력 

	zone "." IN {
        type hint;
        file "named.ca";
};
		> 존파일에 정의되어 있는 (.)의 의미는 루트 도메인이라는 뜻 
		> 루트 도메인의 내용이 named.ca 파일에 정의되어 있다는 뜻 
		> type 설정에서 hint설정을 하면 루트도메인을 지정한다는 의미 
		> master 라고 입력하면 1차네임서버를 의미, slave라고 입력하면 2차 네임서버를 지정 

	[/var/named/named.ca]
	> com, net, org와 같은 최상위 도메인에 대한 관리권한을 가진 네임서버들에 대한 정보를 가지고 있다. 
	> 모두 13개의 루트 네임서버들이 인터넷에 존재한다. 
	> I서버는 스웨덴, K 서버는 영국, M서버는 일본에서 관리, 나머지는 모두 미국에서 관리 
	> 루트 네임서버는 현재 13개가 운영되고 있으며 더 이상 늘릴 수 없다. 
		(DNS 프로토콜 상의 512byte 제약)
	> 일반적으로 DNS 질의는 UDP를 사용하는데 데이터의 크기가 512byte를 넘게 되면 TCP을 사용 한다. 
		(TCP를 사용하면 느려질 수 있다.)

	[root 네임서버 정보 갱신]
	> 루트 도메인 파일의 업데이트를 위해서 named.root 최신 파일을 다운로드 받고 
	  받은 파일을 /var/named/named.ca로 복사 

	#> wget ftp://rs.internic.net/domain/named.root 
		> 최신 named.root 파일을 다운로드

	#> mv named.root /var/named
	#> cp named.root named.ca 
		> 파일 덮어씌우기 

	[도메인 설정]
	#> vim /etc/named.conf 

	[도메인 추가]
	/etc/named.rfc1912.zones 
		> 도메인 추가를 위해 사용되는 기본 파일 
		> /etc/named.conf의 지시어 include를 통해 사용된다. 

	[정방향 데이터베이스 파일 생성]
	/var/named
	named.empty 	: 도메인 데이터베이스 파일 양식 

	$TTL 3H
		> Time to Live (3H - 3시간)
		> 이곳에 설정한 도메인에 대한 정보를 다른 네임서버에서 읽어간 다음 읽어간 네임서버측에 얼마동안 보관하고 
		  있을 것인가를 설정하는 항목 

	@
		> ORIGIN을 의미하는 특수문자 public domain을 의미 

	IN
		> IN 다음에 나오는 우측 설정을 사용한다는 의미 

	SOA
		> ns.test.com. admin.test.com. 
		> ns.test.com 도메인네임서버에 대한 모든 정보를 가지고 있다. 
		> 관리자는 admin@test.com 이라는 메일로 설정 
		> 관리자 메일 설정에서 @는 특수문자로 인식하기 때문에 @를 사용하지 않고, (.)을 사용

	 0       ; serial
		> 마스터 네임서버의 오류 또는 비정상 작동으로 인하여 마스터 네임서버에 장애가 발생했을 때 
		  슬레이브 네임서버의 시리얼번호를 지정하는 설정 

	1D      ; refresh
		> 슬레이브 네임서버에서 마스터 네임서버의 설정사항이 수정되었는지 주기적으로 체크할 시간을 설정 

	1H      ; retry
		> 슬레이브 네임서버에서 마스터 네임서버로 접속할 때 접속에 장애가 발생하면 얼마 후 다시 재접속을 시도할지를 
		  지정하는 시간 항목 

	1W      ; expire
		> 존파일의 유효기간을 설정 
		> 설정된 시간 안에 마스터서버에서 응답을 받지 못했다면 슬레이브서버는 데이터에 대한 유효성을 더 이상 인정하지 
	 	  않고 도메인 데이터를 버린다. 

	3H )    ; minimum
		> $TTL 값과 같은 의미 
-------------------------------------------------------------------------------------------------------
        IN      NS      www.test.com.
        IN      MX 10   ms.test.com.
        IN      A       100.100.100.100
www     IN      A       100.100.100.100
ms      IN      A       100.100.100.100
ftp     IN      A       100.100.100.100

	> 실제적인 네임서버의 도메인 할당 작업
	> [도메인] [탭] [IN] [탭] [A, NS, MX 등] [공백, 탭] [우선순위 숫자] [탭] [도메인, IP주소]
	> 첫 번째 항목에 아무것도 입력하지 않으면 네임서버 환경설정 파일에서 설정한 도메인(test.com)으로 인지한다. 
	> 만약 서브도메인을 입력하고자 한다면 ns, www, mail 또는 전체 도메인으로 입력하도록 한다. 

[레코드의 종류]
	NS	: 도메인의 네임서버 정보 
	MX	: 도메인의 MX(Mail Exchanger) 서버 
	A	: 호스트의 IP주소
	CNAME	: 별칭 
	HINFO	: 호스트의 CPU정보와 운영체제 정보 
	MINFO	: 메일박스와 메일 리스트 정보 
	PTR	: IP주소에 대한 호스트명 
	TXT	: 호스트에 대한 텍스트 정보 
	UINFO	: 사용자 정보 
	ANY	: 호스트에 관련된 모든 레코드들의 정보 

	> NS 레코드는 해당 도메인의 네임서버를 지정하는 레코드
	> NS 레코드 다음에 네임서버의 도메인(루트도메인 포함)을 입력한다. 
	> MX 레코드는 해당 도메인에 대한 메일서버를 지정하는 레코드, 일반적으로 메일서버를 여러개 사용할 때 MX 레코드 
	  다음에 우선 순위 번호를 지정하여 메일을 수신할 수 있다. 







