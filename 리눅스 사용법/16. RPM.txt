[Package Install]
	- 다 묶여져 있는것, 정해져 있는 것을 뜻함.
	
1. RPM(Redhat Package Manager)
	- Windows의 "setup.exe"와 비슷하게 프로그램을 설치한 후에 바로 실행
	- 확장명은 *.rpm 이며, 이를 패키지라고 부른다. 
	- Redhat사에서 만든 패키지 관리 도구 
	- 리눅스 시스템을 패키지 형식으로 관리할 수 있는 관리도구 
	ex) libxml2-2.6.16.i386.rpm 
	  (패키지명/버전/배포버전/설치될시스템/확장자)
			-> 32bit OS인 경우 : i386, i586, i686 
			-> 64bit OS인 경우 : x86_64

	#> rpm [옵션] [패키지명]
	
	<옵션>
	-i	: 패키지 설치 
	-U	: 패키지가 설치/업그레이드 
	-v	: 설치과정의 확인 
	-h	: 설치진행과정을 "#"마크로 화면에 출력 
	--nodeps	: 의존성을 무시하고 진행(삭제에 주로 이용)
	--force	: 같은 버전의 패키지나 파일이 있어도 무시하고 진행 
       --oldpackage : 다운그레이드시 사용 


	1) 설치 및 업데이트 
	#> rpm -ivh <패키지명.rpm>
	#> rpm -Uvh <패키지명.rpm>

	1-1) 옵션 활용
	#> rpm -ivh -replacepkgs <패키지명.rpm>
		> 이미 설치된 패키지에 덮어쓰기, 설치된 패키지에 문제가 있어 고쳐야 하는 경우 사용 


	#> rpm -ivh --force <패키지명.rpm>

	#> rpm -ivh --nodeps <패키지명.rpm>

	2) 패키지 제거 
	#> rpm -e <패키지명.rpm>
	#> rpm -e --nodeps <패키지명.rpm>

	3) 패키지 확인 
		<옵션>
		-a	: 전체 패키지 목록 출력 
		-f	: 파일이 포함되어있는 패키지명 출력 
		-i	: 상세정보 확인 
		-l	: 패키지가 설치한 파일의 목록 출력 
		-R	: 패키지 의존성 확인 
		-q	: 패키지 설치 여부 확인 

	#> rpm -q <패키지 이름>		: 패키지 설치여부 확인 
	#> rpm -qa | grep <패키지 이름>	: 문자열 검색으로 패키지 목록 확인 
	#> rpm -qi <패키지 이름>		: 패키지의 자세한 정보 확인
	#> rpm -qR <패키지 이름>		: 의존패키지 확인가능
	#> rpm -qf <패키지 이름>		: 특정파일의 패키지 확인 
	#> rpm -ql <패키지 이름>		: 설치된 파일 목록 확인 
	#> rpm -qc <패키지 이름>		: 환경 설정파일에 해당되는 파일 확인 
	#> rpm -Vf <패키지 이름>		: 특정 파일의 설치 후 변경상태 점거 

	사이트 : 
	http://www.rpmfind.net/

http://www.rpmfind.net/linux/centos/6.10/os/x86_64/Packages/tar-1.23-15.el6_8.x86_64.rpm

명령어 wget사용해서 주소 넣어서 다운 가능 
사용법 : #> wget <주소입력>

	[설치]
	#> rpm -ivh <패키지명>
		--force 

	[삭제]
	#> rpm -evh --nodeps tar-1.23-15.el6.x86_64

2. YUM(Yellowdog Updater Modified)
	> RPM의 패키지 의존성 문제를 완전히 해결 
	> 인터넷을 통하여 필요한 파일을 저장소(Repository)에서 자동으로 모두 다운로드해서 설치하는 방식 
	[주의사항]
	1) 인터넷이 되어야 한다. 
	2) 정확한 패키지명을 알고 있어야 한다. 
	
	#> yum [옵션] [명령] [패키지명]
	
	<옵션>
	-y	: 사용자의 확인을 모두 "yes"로 간주하고 설치 진행 
	
	<명령>
	search 		: 패키지 검색 

	install 		: 패키지 설치 
	
	update		: 패키지 업데이트 

	chech-update 	: 설치된 패키지 중 업데이트 가능한 목록 확인 
	
	remove		: 패키지 삭제 
	
	info		: 패키지 정보 확인 

	list		: 패키지 목록 확인 

	repolist		: 저장소 목록 확인 

	hostory		: 패키지 설치, 변경, 삭제 작업 등을 확인하고 작업내역 복원 가능 

---------------------------------------------------------------------------
[실습] - telnet-server 설치 및 실행 
	#> yum -y install telnet-server
	#> rpm -qa | grep telnet

	[telnet 설정 파일]
	/etc/xinetd.d/telnet 
--------------------------------------------------------------------------------
[그룹패키지]
	> 특정 환경을 구성하기 위해서 필요한 패키지들을 그룹으로 묶어 설치할 수 있도록 만든 패키지 

	#> yum groupinstall [그룹 패키지명]
	#> yum grouplist 

	#> echo $LANG 

[저장소 추가] 
주 설정파일 경로 : /etc/yum.conf 
저장소 서버 정보 파일 경로 : /etc/yum.repos.d
CentOS-Base.repo : CentOS 기본 패키지 파일저장소 정보 파일 

	[] 	: NAME, 저장소 식별자 
	[base]	: 기본 패키지 저장소 정보 
	[updates]: 업데이트 패키지 저장소 정보 
	[extras]	: 추가 배포 패키지 저장소 정보 


	EPEL
		> 리눅스 환경을 위한 엔터프라이즈 추가 패키지 저장소 
		> Fedora 에서 제공되는 저장소로 CentOS 표준 저장소에서 제공되지 않는다.
		> 각종 최신버전의 패키지를 yum 명령어로 설치하는것을 허용 

	REMI
		> EPEL과 의존성이 있는 관계로 먼저 EPEL을 추가해야 한다. 
		> EPEL 설치를 하지 않으면 설치 불가
		
	IUS
		> 엔터프라이즈 환경을 위한 최신 버전의 패키지를 제공 
		> 패키지 이름을 다른 공식 저장소에서 사용되는 패키지 이름과 다르게 하여 충돌이나 
		   버전 업데이트를 방지 


	저장소 추가) 
		#> yum search epel-release : 패키지 검색
		#> yum -y install epel-release.noarch

	저장소 삭제)
		1. /etc/yum.repos.d 에서 rm -rf [repo 파일명]

		2. /var/cache/yum 

--------------------------------------------------------------------------------








