[프로세스 관리]

1. 프로세스 
	- 프로그램 : 설치만 한 상태 
	- 프로세스 
		1) 실행 중인 프로그램 
		2) 사용자에 의해 수행되는 사용자 프로그램 
		3) 시스템 운영에 필요한 시스템 프로그램 
		4) 고유 번호 부여 (PID)

	- 커널은 프로세스 관리를 위해 각 프로세스에게 PCB를 할당 

	[PCB : Process Control Block]
	- 모든 프로세스는 생성되는 순간 프로세스 제어 블럭이라는 자신만의 공간을 할당 

	- PID		: 프로세스 고유 번호 
	- 우선 순위 	: 운영체제가 스케줄링 하기 위한 정보 
	- 현재 상태	: 할당받은 자원 프로세스의 상태를 나타내는 정보 
	- 문맥 저장 영역	: 현재 수행중인 프로세스의 실행이 중단되었다 할지라도 실행되는 중간 결과는
			  소멸되어서는 안된다.(저장)

2. 프로세스의 종류 
	1) 대화형		: 대화형식 (우리가 쓰는 명령어)
	2) 배치		: 순차적인 실행 
	3) 데몬		: 윈도우의 서비스 

	* 부모프로세스
		> init 프로세스를 제외한 모든 프로세스는 부모프로세스를 가진다. 
	
	* 자식프로세스 
		> 부모프로세스에 의해서 만들어지는 프로세스 
		> 자식 프로세스는 종류 시 부모프로세스에게 결과를 전달하고 종료

	* 고아프로세스 
		> 자식 프로세스보다 먼저 부모프로세스가 종료되면 
		   자식 프로세스는 고아 프로세스가 된다. 
	
	* 좀비프로세스 
		> 자식 프로세스의 종료 신호를 부모 프로세스가 처리하지 못할 경우 
		   자식 프로세스는 좀비 프로세스가 된다. 
 
3. 포어그라운드 (Fore Ground)
	- 앞에 있는 땅 (눈에 보이는 것)
	- 프롬프트에 입력한 대부분의 명령어는 포어그라운드로 동작 
	- 명령을 입력한 후 [Enter]
	- 포어그라운드 작업 취소 : Ctrl + C

4. 백그라운드(Back Ground)
	- 뒤에 있는 땅 (눈에 보이지 않는 것)
	- 시스템 내부적으로 명령을 실행시키는 방법 
	- 실행 시간이 오래 걸리는 프로세스를 뒤로 보낼 때 사용 
	- 백그라운드 실행 : 명령어 뒤에 "&"붙여서 실행 
	- 명령이 완료되면 작업번호와 함께 "Done"메시지 출력 

	- 백그라운드에서 작업중인 프로세스 확인 : jobs 
	- 백그라운드 -> 포어그라운드 : fg %[작업번호]
	- 포어그라운드 -> 백그라운드 : Ctrl + Z (일시정지)
	
5. 프로세스 명령어 
	#> ps [옵션]
	
	<옵션>
	-a	: 다른 터미널의 프로세스 출력 
	-u	: 사용자 이름, 메모리 정보, CPU정보, 시간정보 출력
	-x	: 현재 사용중인 모든 프로세스 출력 
	-e	: 모든 프로세스의 환경 
	-f	: Full format (모든 형식) - 절대경로 

	#> ps -ef : 간단하게 보기 
	

	UID         PID   PPID  C STIME TTY          TIME CMD

	UID	: 프로세스를 실행시킨 프로세스 소유자 
	PID	: 프로세스의 고유 번호 
	PPID	: 부모프로세스의 PID 
	C	: CPU사용량 (현재x)
	STIME	: 프로세스가 시작된 시간 
	TTY	: 프로세스에 의해 연결된 제어 터미널 
		- pst/<num>	: 원격 터미널(putty)
		- tty/<num>	: 로컬 터미널 

	TIME	: 프로세스에 의해 사용된 CPU의 사용 시간 
	CMD	: 실행 프로세스명 (실행 명령어)

	#> ps -aux	: 자세하게 보기 

	USER        PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND

	USER		: 프로세스 사용자의 아이디 
	PID		: 프로세스의 고유 번호 
	%CPU		: 프로세스 CPU 사용률 
	%MEM		: 프로세스 메모리 사용률
	VSZ		: 가상 메모리에 적재된 프로세스의 크기 
	RSS		: 실제 물리 메모리에 적재된 프로세스의 크기 
	TTY		: 터미널 정보 
	STAT		: 프로세스의 상태 
	START		: 프로세스의 시작 시간 
	TIME		: 프로세스의 CPU사용 시간 
	COMMAND	: 프로세스의 명(실행 명령어)

	[상태정보]
	S	: Sleep
	Z	: 좀비
	D	: 디스크 입력 대기
	R	: 현재 실행 중인 상태 
	W	: 대기 상태 

6. 프로세스 종료 
	#> kill [옵션] [PID]

	#> kill -l : 프로세스 종료 시그널 확인 

	#> kill -9 PID : 프로세스 강제 종료 

문제) ping 8.8.8.8 -> 포어그라운드 실행, kill 명령어로 종료 


[프로세스 관련된 명령어]
	#> pstree 	: 부모프로세스와 자식프로세스간의 계층 구조 
	#> pstree -p	: 사용자의 프로세스 계정 구조에 PID를 포함 

	#> top		: 프로세스의 실행 상태를 실시간으로 확인 
		[q]	: 종료 

	#> top -d [시간]	: 갱신 시간 지정

	#> uname	: system 정보 확인
	#> uname -a	: system정보, 커널 정보 확인 

	#> free		: 메모리정보 
	#> free -m	: MB단위 

	#> last 		: 최근 시스템 접속 정보 












