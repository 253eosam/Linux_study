[grep]
	- 파일 전체를 뒤져 정규표현식에 대응하는 모든 행들을 출력

[eprep]
	- grep의 확장판으로, 추가 정규표현식 메타문자들을 지원한다.

[fgrep]
	- 모든 문자를 문자 그대로 취급
	- 정규표현식의 메타문자도 일반 문자로 취급

grep 에서 사용하는 정규표현식 메타문자
	1. ^
		- 행의 지시자
		- '^love'
		- love로 시작하는 모든 행과 대응
	2. $
		- 행의 끝 지시자
		- 'love$'
		- love로 끝나는 모든 행
	3. .
		- 하나의 문자와 대응
		- 'l..e'
		- l 다음에 두글자가 나오고 e로 끝나는 문자열을 포함하는 행
	4. *
		-  선행문자와 같은 문자의 0개 혹은 임의 개수와 대응
		- ' *love'
		- 0개 혹은 임의 개수의 공백 문자 후에 love로 끝나는 문자열의 포함한 행
	5. []
		- [] 사이의 문자 중 하나와 대응
		- '[Ll]ove'	
		- love나 Love를 포함하는 행
	6. [^ ]
		- 문자집합에 속하지 않는 한 문자와 대응 
		- '[^A-K]love'
		- A와 K사이의 범위에 포함되지 않는 한 문자와 love가 붙어있는 문자열과 대응
	7. \<
		- 단어의 시작 지시자 
		- '\<love'
		- love로 시작하는 단어를 포함하는 행과 대응
	8. \>	
		- 단어의 끝 지시자 
		- '\>love'
		- love로 끝나는 단어를 포함하는 행과 대응
	9. x\{m\}	
		- 문자 x를 m번 반복
		- 'o\{5\}'
		- 문자 o가 5회 연속적으로 나오는 모든 행과 대응
	10. x\{m,\}	
		- 문자 x를 m번 반복(최소)
		- 'o\{5,\}'
		- 문자 o가 최소한 5회 반복되는 행과 대응
	11. x\{m,n\}
		- 문자 x를 m회 이상 n회 이하 반복
		- 'o\{5,7\}'
		- 문자 o가 연속적으로 5회이상 7회이하 반복되는 행과 대응


[grep 옵션]
	-b	: 검색 결과의 각 행 앞에 검색된 위치의 블록 번호를 표시
	-c 	: 검색 결과를 출력하는 대신, 찾아낸 행의 총수를 출력한다.
	-h	: 파일 이름을 출력하지 않는다.
	-i	: 대소문자를 구분 하지 않는다.
	-l	: 패턴이 존재하는 파일의 이름만 출력 
	-n	: 파일 내에서 행 번호를 함께 출력
	-s	: 에러 메시지 외에는 출력하지 않는다
	-v	: 패턴이 존재하지 않는 행만 출력
	-w 	: 패턴 표현식을 하나의 단어로 취급하여 검색

[종료상태]
grep은 파일 검색의 성공 여부를 종료 상태값으로 되돌려준다.
패턴을 찾으면 0, 패턴을 찾을 수 없으면 1, 파일이 존재하지 않을 경우 2

[정규표현식을 사용하는 grep의 예제]
#> grep NW 파일명	: NW를 포함하는 모든 행을 찾는다.
#> grep '^n' 파일명	: n으로 시작하는 모든 행을 출력한다.
#> grep '4$' 파일명	: 4로 끝나는 모든 행을 출력
#> grep TB 파일명 파일명	: 두 파일에서 TB를 포함한 행을 출력
#> grep '5\.' 파일명	: 숫자5, 마침표, 임의의 한 문자가 순서대로 나타나는 문자열이 포함된 행을 출력
#> grep '\.5' 파일명	: .5가 나오는 모든 행을 출력
#> grep '^[we]' 파일명	: w나 e로 시작하는 모든 행을 출력
#> grep '[^0-9]' 파일명	: 숫자가 아닌 문자를 하나라도 포함하는 모든 행을 출력
#> grep '[A-Z][A-Z] [A-Z]' 파일명	: 대문자 2개와 공백 1개, 그리고 대문자 하나가 연이어 나오는 문자열이 포함된 행을 출력
#> grep 'ss*' 파일명	: s가 한 번 나오고, 다시 s가 0번 또는 여러번 나온 후에 공백이 연이어 등장하는 문자열을 포함하는 모든 행 출력
#> grep '[a-z]\{9\}' 파일명	: 소문자가 9번 이상 반복되는 문자열을 포함하는 모든 행을 출력


문제)
	1. 현재 디렉토리의 모든파일에서 grep을 이용하여 마침표로 시작되는 줄을 찾는다. 

	2. 현재 디렉토리의 모든파일에서 mail이라는 패턴이 들어간 파일의 이름을 출력 

	3. /etc/group과 /etc/passwd에서 root가 있는 라인의 개수를 출력 

	4. /etc/passwd파일에서 시작문자가 r, 마지막 문자가 h로 끝나는 행을 출력 

	5. /etc/inittab에서 빈칸들을 제외하고 출력 (# 주석에서 글씨가 없는 것들 제외)




