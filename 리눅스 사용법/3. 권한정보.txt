1. 권한
	#> ls -al
	-rw-r--r--.  1	 root	root	28	2012-12-12 12:12	naver
	(1)   (2)   (3)  (4) 	(5)	(6)	(7)			(8)

	(1) 파일의 타입
		d	: 디렉토리 파일
		-	: 일반 파일
		b,c	: 장치 파일
		l	: 링크 파일

	(2) 파일의 권한
	(3) 하드 링크 파일의 수
	(4) 소유자
	(5) 소유그룹
	(6) 파일의 크기
	(7) 파일 마지막 수정 시간
	(8) 파일의 이름

	<파일의 권한>
	rw- r-- r--
	(1) (2) (3)
	
	(1) : 파일 소유자의 권한
	(2) : 파일 소유그룹의 권한
	(3) : 그외 사용자의 권한

2. 권한 표시
	1) 일반 파일
		r	: read(읽기) - cat, head, tail, vi
		w	: write(쓰기) - vi
		x	: execute(실행)
	2) 디렉토리 파일
		r	: ls				// 진입 권한이 없다면 ls 사용 불가능
		w	: touch, mkdir, rm, rmdir
		x	: cd(진입)

3. 숫자 표기 (octal)
	r	: 2^2 = 4
	w	: 2^1 = 2
	x 	: 2^0 = 1

	rwx 	: 4 + 2 + 1 = 7
	rw-	: 4 + 2 + 0 = 6
	r--	: 4 + 0 + 0 = 4
	---	: 0 + 0 + 0 = 0

4. UMASK : 파일이나 디렉토리파일 생성시 부여하지 않을 권한 ( 파일의 기본 권한 )
	#> umask [umask값]
	
	root(관리자) 사용자 022
		> 일반파일 666 - 022 = 644
		> 디렉토리 파일 777 - 022 = 755

	일반 사용자	002
		> 일반파일  666 - 002 = 664
		> 디렉토리 파일 777 -002 = 775
	
	* umask 계산 => 2진수로 변환 -> umask보수 값 -> AND연산 한 결과
		ex)	666(일반파일)	->	110 110 110	->	110 110 110	
			022(관리자)	->	000 010 010	->(보수)111 101 101  AND
			--------------		------------	--------------------------
									110 100 100	->  644
5.파일의 권한 변경
	#> chmod [옵션] [권한] [파일명]
	[옵션]
	-R	: 현재경로와 그 하위 파일들을 모두 변경한다.
	
6. 파일의 소유권 (소유자 , 소유그룹) 변경
	#> chown [옵션] [소유자 or 그룹이름] [파일명]
	[옵션]
	-R 	: 현재경로와 그 하위 파일들을 모두 변경한다.

7. 파일의 소유그룹 변경
	#> chgrp [옵션] [그룹이름] [파일명]
	[옵션]
	-R 	: 현재경로와 그 하위 파일들을 모두 변경한다.

8. 심볼릭(symbolic)
	#> u(소유자), g(소유그룹), o(그외 사용자), a(all)
		[ + , - , = ]
		+ : 추가
		- : 제거
		= : 대입

9. 파이프(|)와 세미콜론(;)
	1) 파이프(|)	:명령을 동시에 사용
		> 앞 프로그램의 결과를 뒤 프로그램의 입력 값으로 전달해주는 역할
		> 다른 명령과 조합
		ex) ls -al /bin | more

	2) 세미콜론(;) : 명령을 순차적으로 사용
		ex) ls;ls;ls;
































