[디스크 관리]

1. 디스크 기본 구조 
	1) Spindle 	: 플래터를 회전 시키는 역할 
	2) Flatter		: 실제 데이터가 저장되는 위치 
	3) Head 		: 플래터에 기록된 데이터를 읽거나, 기록하는 장치 
	4) Actuator Arm 	: 헤드를 움직이고, 원하는 트랙으로 헤드가 찾아가게 하는 장치 
	5) Data Connector	: 디스크와 연결 인터페이스 종류에 맞는 케이블 연결 
	6) Power Connector	: 디스크 구동에 필요한 전원 케이블 연결 

2. Flatter의 구성요소 
	1) Track 	: Sector들이 모여 하나의 원이 만들어진다. 

	2) Sector	: 데이터의 읽기/쓰기의 기본단위 

	3) Track Sector	: 같은 구역에 있는 Sector의 집합 

	4) Cluster	: 하드 디스크에 파일을 저장하는 논리적인 단위 


3. 디스크 장착 
	1) IDE(integrated Drive Electronics) 방식 
		- 40개의 핀으로 구성
		- 데이터를 병렬로 전송 

	2) SATA(Seral Advance Technology Attachment) 방식 
		- 직렬로 데이터를 전송 
		- S-ATA1의 전송속도는 150MB/s, S-ATA2는 300MB/s, S-ATA3 600MB/s
		- 핫 플러깅 지원 
		- 한 케이블 당 한개의 디스크를 연결 

	3) SCSI(Small Computer System Interface)
		- 서버나 워크스테이션 등에 쓰이는 고속 인터페이스 
		- 안정성이 높다. 
		- 가격이 비쌈 

	4) SAS(Seral Atached SCSI) 
		- SCSI 규격을 한단계 발전 시킨 것 
		- 서버 or 대형 컴퓨터에 사용
		- 비싸다. 

4. 디스크 장치 표기 
	> 장치명은 하드디스크 인터페이스에 따라 이름이 정해진다. 

	IDE	hd<문자>		ex) hda, hdb, ..
	SCSI	sd<문자>		ex) sda, sdb, ...
	SATA	sd<문자>		ex) sdc, sdd, ...

5. 파티션(Partition) : 하나의 물리적인 디스크를 여러개의 논리적인 디스크로 나누는 것 
	1) 주 파티션(Primary Partition)
		- 부팅 가능한 파티션 
		- 최대 4개까지 생성 가능 
		- 파티션 번호 : 1 ~ 4 
		- 하나의 물리적 하드디스크는 4개의 주 파티션을 가지거나 
		   3개의 기본파티션과 1개의 확장파티션을 가질 수 있다. 

	2) 확장 파티션(Extended Partition)
		- 기본 파티션 중 하나만을 확장 파티션으로 둘 수 있다. 
		- 논리 파티션을 생성하기 위한 공간 
			> 파일 저장 용도로 사용할 수 없다. 

	3) 논리 파티션(Logical Partition)
		- 주 파티션과 같은 역할 
		- 확장 파티션 내에서만 생성 가능한 파티션 
		- 파티션 번호 : 5 ~ (개수 제한 없음)


	#> fdisk [옵션] : 하드디스크를 초기화하고 파티션 생성하는 명령어 

	<옵션>
	-l	: 현재 시스템의 파티션 목록 출력 
	-v	: 버전 정보 출력 
	-s	: 입력된 장치의 크기 출력 

	#> fdisk <장치파일명>
		- 파티션 관리 
			m	: help(menu  출력)
			n	: 파티션 추가 
			d	: 파티션 삭제 
			p	: 파티션 테이블 출력(파티션 설정 확인)
			w	: 저장하고 종료 
			q	: 저장하지 않고 종료 

6. 파일 시스템 
	- 저장 장치에 파일을 관리하기 위한 체계 
	- 각 운영체제별 고유의 파일 시스템이 존재 
		windows 	NTFS 
		리눅스	XFS, Ext2, 3, 4, ...

	- 리눅스의 대표적인 파일시스템 : ext3, ext4, swap, xfs, iso9660, nfs 등
	
	Ext2 
		- ext3이 나오기 전까지 거의 대부분의 리눅스가 채택한 파일시스템
		- 256바이트 길이의 파일이름이 가능 
		- 2기가 바이트 단일파일, 4테라바이트의 디스크를 사용할 수 있음 
		- 예상치 못한 정전이나 기타 사유로 시스템이 비정상적으로 종료가 되었을 때 
		   부팅시 ext2 파일시스템을 검사하는 프로그램인 e2fsck를 실행하여 파일 시스템의
		   일관성 검사를 한다. 
			(시간이 엄청 오래 걸린다.)

	Ext3
		- 커널 2.4버전부터 지원하고 있는 파일시스템으로 ext2의 파일시스템에 
		   저널링기능을 추가한 파일시스템 
	
		- 저널링: 시스템 충돌이나 중단 시 하드 디스크의 무결성을 유지시킬 수 있는 파일시스템
		              디스크의 데이터 영역에서 일어나는 모든 내용을 로그로 유지하면서 
			충돌이 발생하면 로그에 있는 메타데이터로 유실 데이터를 다시 만들어 
			충돌전으로 데이터를 되돌려 준다. 

	Ext4
		- ext3의 성능을 향상시키며, 하위 호환성이 있는 확장 버전 
		- 대형 파일시스템이라고 불린다. 
		- 최대 1엑사바이트의 볼륨(파일시스템의 크기)과 
		   최대 16테라바이트의 파일을 지원 
		- 서브디렉토리 64000개 지원, 파일 약 40억개 지원 

	FAT
		- MS-DOS 및 윈도우즈 운영체제에서 쓰이는 파일시스템

	FAT32
		- FAT 파일시스템의 32비트 버전으로 windows95에 처음 도입되어 최근까지도 사용 

	NTFS
		- windows 운영체제에서 쓰이는 파일 시스템 

	1) 파일 시스템 생성 
		#> mkfs -t <type> <장치파일>
			> 파일시스템 입히기 (포멧)

	2) 확인 
		#> file -s <장치파일>

		#> df <옵션>
		
		<옵션>
		-T	: 시스템 type
		-h	: 단위 출력 

	#> badblocks <옵션>	: 배드블럭 검사 명령어 
		- 블럭(Block) : 파일 시스템이 항상 연속적으로 할당하려고 하는 데이터의 크기 

		- 배드 블럭 : 디스크의 물리적 손상 

	<옵션>
	-b	: 블록크기(byte단위로 나타냄)
	-o	: 출력파일(배드블럭의 목록을 파일에 저장)
	-v	: 상세 내용 출력
	-w	: 쓰기 모드 테스트(주의: 소요시간이 길고 데이터가 존재할 시 삭제됨)

	#> badblocks -v /dev/sda1

7. 마운트(Mount)
	- 장치(H/W)와 특정디렉토리를 연결시켜주는 작업 
	
	#> mount [장치파일] [마운트 포인트]
	
	[주의사항]
	- 1:1 한개의 장치는 하나의 마운드 포인트 사용
	- 마운트 포인트는 임의의 디렉토리여야 한다. 
	- 반드시 포맷 후 사용 

	#> umount [마운트 포인트]

	[주의사항]
	- 마운트를 해제할 경로에 위치한 상태에서는 해당 명령어를 사용할 수 없다. 
	- 마운트된 지점에 파일을 사용중일때에 사용 불가능 

[파일 시스템 설정 파일]
	/etc/fstab	: 부팅 시 마운트 할 파일시스템 설정 
	/etc/mtab	: 마운트 상황 

	[장치명]	[마운트포인트]  [파일시스템타입]  [옵션]  [덤프생성유무]  [파일시스템검사유무]

	장치명 : 파티션에 접근하기 위한 파일 경로 
	마운트포인트 : 장치에 연결되는 디렉토리 
	파일시스템타입 : mkfs 명령어로 생성한 해당 파티션의 파일 시스템 종류 
	옵션 : 보통 defaults 옵션을 사용 (rw, suid, dev, exec, auto, nouser, async의 옵션 모두 선택)

		auto	: 부팅시 자동으로 마운트 
		async	: 비동기 I/O 사용 
		noauto	: 부팅시 자동으로 마운트 하지 않는다. 
		exec	: 실행파일이 실행되는 것을 허용하는 파일 시스템이다. 
		noexec	: 실행파일을 실행되지 못하게 하는 파일 시스템
		suid	: SetUID와 setGID 가 허용하지 않는 파일 시스템
		ro	: 읽기 전용
		rw	: 읽기/쓰기 전용
		user	: 일반 계정사용자도 마운트할 수 있는 파일시스템 
		nouser	: 오직root만이 mount 한다. 
================================================================================
[하드디스크 추가]
1. 하드 디스크 추가 

2. 재부팅 

3. 추가한 하드디스크 확인 

4. 파티션 생성 

5. 마운트 
		













